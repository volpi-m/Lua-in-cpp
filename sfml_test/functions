/*
DONE : sfRenderWindow* sfRenderWindow_create(sfVideoMode mode, const char* title, sfUint32 style, const sfContextSettings* settings);
//NOPE : sfRenderWindow* sfRenderWindow_createUnicode(sfVideoMode mode, const sfUint32* title, sfUint32 style, const sfContextSettings* settings);
//NOPE : sfRenderWindow* sfRenderWindow_createFromHandle(sfWindowHandle handle, const sfContextSettings* settings);
DONE : void sfRenderWindow_destroy(sfRenderWindow* renderWindow);
DONE : void sfRenderWindow_close(sfRenderWindow* renderWindow);
DONE : sfBool sfRenderWindow_isOpen(const sfRenderWindow* renderWindow);
TODO : sfContextSettings sfRenderWindow_getSettings(const sfRenderWindow* renderWindow);
DONE : sfBool sfRenderWindow_pollEvent(sfRenderWindow* renderWindow, sfEvent* event);
DONE : sfBool sfRenderWindow_waitEvent(sfRenderWindow* renderWindow, sfEvent* event);
TODO : sfVector2i sfRenderWindow_getPosition(const sfRenderWindow* renderWindow);
TODO : void sfRenderWindow_setPosition(sfRenderWindow* renderWindow, sfVector2i position);
TODO : sfVector2u sfRenderWindow_getSize(const sfRenderWindow* renderWindow);
DONE : void sfRenderWindow_setSize(sfRenderWindow* renderWindow, sfVector2u size);
DONE : void sfRenderWindow_setTitle(sfRenderWindow* renderWindow, const char* title);
DONE : void sfRenderWindow_setUnicodeTitle(sfRenderWindow* renderWindow, const sfUint32* title);
DONE : void sfRenderWindow_setIcon(sfRenderWindow* renderWindow, unsigned int width, unsigned int height, const sfUint8* pixels);
DONE : void sfRenderWindow_setVisible(sfRenderWindow* renderWindow, sfBool visible);
DONE : void sfRenderWindow_setVerticalSyncEnabled(sfRenderWindow* renderWindow, sfBool enabled);
DONE : void sfRenderWindow_setMouseCursorVisible(sfRenderWindow* renderWindow, sfBool show);
DONE : void sfRenderWindow_setMouseCursorGrabbed(sfRenderWindow* renderWindow, sfBool grabbed);
DONE : void sfRenderWindow_setKeyRepeatEnabled(sfRenderWindow* renderWindow, sfBool enabled);
DONE : void sfRenderWindow_setFramerateLimit(sfRenderWindow* renderWindow, unsigned int limit);
DONE : void sfRenderWindow_setJoystickThreshold(sfRenderWindow* renderWindow, float threshold);
TODO : sfBool sfRenderWindow_setActive(sfRenderWindow* renderWindow, sfBool active);
TODO : void sfRenderWindow_requestFocus(sfRenderWindow* renderWindow);
TODO : sfBool sfRenderWindow_hasFocus(const sfRenderWindow* renderWindow);
DONE : void sfRenderWindow_display(sfRenderWindow* renderWindow);
//NOPE : sfWindowHandle sfRenderWindow_getSystemHandle(const sfRenderWindow* renderWindow);
DONE : void sfRenderWindow_clear(sfRenderWindow* renderWindow, sfColor color);
//NOPE : void sfRenderWindow_setView(sfRenderWindow* renderWindow, const sfView* view);
//NOPE : const sfView* sfRenderWindow_getView(const sfRenderWindow* renderWindow);
//NOPE : const sfView* sfRenderWindow_getDefaultView(const sfRenderWindow* renderWindow);
//NOPE : sfIntRect sfRenderWindow_getViewport(const sfRenderWindow* renderWindow, const sfView* view);
//NOPE : sfVector2f sfRenderWindow_mapPixelToCoords(const sfRenderWindow* renderWindow, sfVector2i point, const sfView* view);
//NOPE : sfVector2i sfRenderWindow_mapCoordsToPixel(const sfRenderWindow* renderWindow, sfVector2f point, const sfView* view);
TODO : void sfRenderWindow_drawSprite(sfRenderWindow* renderWindow, const sfSprite* object, const sfRenderStates* states);
TODO : void sfRenderWindow_drawText(sfRenderWindow* renderWindow, const sfText* object, const sfRenderStates* states);
TODO : void sfRenderWindow_drawShape(sfRenderWindow* renderWindow, const sfShape* object, const sfRenderStates* states);
TODO : void sfRenderWindow_drawCircleShape(sfRenderWindow* renderWindow, const sfCircleShape* object, const sfRenderStates* states);
TODO : void sfRenderWindow_drawConvexShape(sfRenderWindow* renderWindow, const sfConvexShape* object, const sfRenderStates* states);
TODO : void sfRenderWindow_drawRectangleShape(sfRenderWindow* renderWindow, const sfRectangleShape* object, const sfRenderStates* states);
TODO : void sfRenderWindow_drawVertexArray(sfRenderWindow* renderWindow, const sfVertexArray* object, const sfRenderStates* states);
TODO : void sfRenderWindow_drawPrimitives(sfRenderWindow* renderWindow, const sfVertex* vertices, size_t vertexCount, sfPrimitiveType type, const sfRenderStates* states);
//NOPE : void sfRenderWindow_pushGLStates(sfRenderWindow* renderWindow);
//NOPE : void sfRenderWindow_popGLStates(sfRenderWindow* renderWindow);
//NOPE : void sfRenderWindow_resetGLStates(sfRenderWindow* renderWindow);
TODO : sfVector2i sfMouse_getPositionRenderWindow(const sfRenderWindow* relativeTo);
TODO : void sfMouse_setPositionRenderWindow(sfVector2i position, const sfRenderWindow* relativeTo);
//NOPE : sfVector2i sfTouch_getPositionRenderWindow(unsigned int finger, const sfRenderWindow* relativeTo);
*/